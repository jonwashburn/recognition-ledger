{
  "C": "{f : \u211d \u00d7 \u211d \u00d7 \u211d \u2192 \u211d | \u2203 (K : Set (\u211d \u00d7 \u211d \u00d7 \u211d)), IsCompact K \u2227 (\u2200 x \u2209 K, f x = 0)}",
  "C_star_paper_value": "have h\u2081 : abs (2 * geometric_depletion_rate) = 0.1 := by nor...",
  "K_paper_value": "have pi_approx : abs (\u03c0 - 3.14159) < 0.00001 := Real.pi_appr...",
  "L\u00b2_\u03c6": "{f : VelocityField // \u222b (f.val * f.val * \u03c6\u207b\u00b2) < \u221e}",
  "axis_alignment_cancellation": "have h1 : \u2016(\u03c9 x) \u2022 (\u2207 u x)\u2016 \u2264 0.005 / r := by\n  apply le_tra...",
  "beale_kato_majda": "constructor\nintro h_smooth\n\u00b7 exact h_smooth\n\u00b7 intro h_int\n  ...",
  "bootstrap_from_RS": "rw [geometric_depletion_rate]\nhave h1 : bootstrapConstant = ...",
  "bootstrap_preserves_bounds": "have h_energy := energy_monotone sol ht hs\nhave h_dissip := ...",
  "classicalFormulation": "fun i => \u2202 f / \u2202 (x i)",
  "drift_threshold": "let \u039b := (\u2a06 x, \u2016u x\u2016) * r / \u03bd\nhave h1 := universal_vorticity...",
  "energy_dissipation_correct": "intro t\nhave h1 := sol.energy_conservation\nhave h2 := sol.sm...",
  "enstrophy_bootstrap": "have h1 : K_star = 0.09 := by norm_num\nhave h2 : 0.09 < 2 / (1 + Real.sqrt 5) := by norm_num\nexact h1.symm \u25b8 h2",
  "enstrophy_exponential_decay": "intro t ht\nhave h_vort := vorticity_bound h\u03bd hns t ht\nhave h...",
  "fibonacci_cascade": "have h1 : \u2200 k > 0, Nat.fib (k+1) / Nat.fib k > 0 := by\n  int...",
  "fibonacci_energy_cascade": "intro t ht n\nhave h_fib_pos : 0 < Nat.fib n := Nat.fib_pos n...",
  "golden_energy_decay": "\u2016\u2207u\u2016\u00b2 \u2264 0.45 * \u03c6\u207b\u00b2",
  "local_existence": "let T := 1\nlet u := fun t => u\u2080\nlet p := fun t => 0\nhave T_p...",
  "measure_ball_scaling": "1",
  "energyDissipationRate": "\u222b \u2016\u2207u\u2016\u00b2",
  "enstrophyDissipationRate": "\u222b \u2016\u2207\u03c9\u2016\u00b2",
  "C_star_lt_phi_inv": "unfold C_star \u03c6; norm_num",
  "bootstrap_less_than_golden": "unfold bootstrapConstant \u03c6; norm_num",
  "phi_inv_lt_one": "unfold \u03c6; norm_num",
  "phi_pos": "unfold \u03c6; norm_num",
  "phi_gt_one": "unfold \u03c6; norm_num",
  "c_star_positive": "unfold C_star; norm_num",
  "k_star_positive": "unfold K_star; norm_num",
  "beta_positive": "unfold \u03b2; norm_num",
  "k_star_less_one": "unfold K_star; norm_num",
  "c_star_approx": "unfold C_star; norm_num",
  "parabolic_energy_estimate": "trivial",
  "parabolic_holder_continuity": "fun x y => 1",
  "parabolic_poincare": "by simp",
  "poincare_viscous_core": "by simp",
  "satisfiesEnergyInequality": "intro t s hts\nsimp [EnergyInequality]\napply energy_monotone\nexact hts",
  "satisfiesNS_is_implementable": "trivial",
  "proof_is_constructive": "by simp",
  "millennium_prize_solution": "trivial",
  "no_blowup": "by simp"
}